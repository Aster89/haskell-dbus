:# Copyright (C) 2009-2010 John Millikin <jmillikin@gmail.com>
:# 
:# This program is free software: you can redistribute it and/or modify
:# it under the terms of the GNU General Public License as published by
:# the Free Software Foundation, either version 3 of the License, or
:# any later version.
:# 
:# This program is distributed in the hope that it will be useful,
:# but WITHOUT ANY WARRANTY; without even the implied warranty of
:# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
:# GNU General Public License for more details.
:# 
:# You should have received a copy of the GNU General Public License
:# along with this program.  If not, see <http://www.gnu.org/licenses/>.

\section{Introduction}

D-Bus is a low-latency, asynchronous IPC protocol. It is primarily used on
Linux, BSD, and other free UNIX-like systems. More information is available
at \url{http://dbus.freedesktop.org/}.

This package is an implementation of the D-Bus protocol. It is intended
for use in either a client or server, though currently only the client
portion of connection establishment is implemented. Additionally, it
implements the introspection file format.

All source code is licensed under the terms of the GNU GPL v3 or later.

:d copyright
-- Copyright (C) 2009-2010 John Millikin <jmillikin@gmail.com>
-- 
-- This program is free software: you can redistribute it and/or modify
-- it under the terms of the GNU General Public License as published by
-- the Free Software Foundation, either version 3 of the License, or
-- any later version.
-- 
-- This program is distributed in the hope that it will be useful,
-- but WITHOUT ANY WARRANTY; without even the implied warranty of
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-- GNU General Public License for more details.
-- 
-- You should have received a copy of the GNU General Public License
-- along with this program.  If not, see <http://www.gnu.org/licenses/>.
:

\section{Text values}

Most of the functions in this library use the types and functions defined
in {\tt Data.Text}, in preference to the {\tt String} type.

:d text extensions
{-# LANGUAGE OverloadedStrings #-}
:

:d text imports
import Data.Text.Lazy (Text)
import qualified Data.Text.Lazy as TL
:
